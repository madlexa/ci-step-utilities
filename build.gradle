
task install(type: Copy) {
    int delimiter = application.indexOf(":")
    delimiter = delimiter == -1 ? application.length() : delimiter
    String name = application.substring(0, delimiter)
    String version = application.substring(delimiter + 1, application.length())
    switch (name) {
        case "maven":
            String zip = System.getProperty("java.io.tmpdir") + "apache-maven-${version}-bin.zip"
            String url = "https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/${version}/apache-maven-${version}-bin.zip"
            download(zip, url)
            from zipTree(zip)

            String result = System.getProperty("java.io.tmpdir") + "apache-maven-${version}"
            into new File(result)

            println "##teamcity[buildParameter name='ci-utils.maven.path' value='${result}/apache-maven-${version}']"
            println "parameter 'ci-utils.maven.path' added"
            break
        case "custom":
            String url = version
            String fileName = url.substring( url.lastIndexOf('/')+1, url.length() )
            if (fileName.contains("?")) fileName = fileName.substring(0, fileName.indexOf("?"))

            String file = System.getProperty("java.io.tmpdir") + fileName
            download(file, url)

            println "##teamcity[buildParameter name='ci-utils.downloaded.path' value='${file}']"
            println "parameter 'ci-utils.downloaded.path' added"
            break
    }
}

private void download(String file, String url) {
    File dst = new File(file)
    if (!dst.exists()) {
        println "Started download ${url}"
        new URL(url).withInputStream{ i -> dst.withOutputStream{ it << i }}
        println "Finished download ${url}"
        println "File created ${file}"
    }
}